{"version":3,"sources":["./src/app/hours.service.ts","./src/app/upload-user/upload-user.component.html","./src/app/upload-user/upload-user.component.ts","./src/app/upload-enrollment/upload-enrollment.component.html","./src/app/upload-enrollment/upload-enrollment.component.ts","./src/app/user-admin/user-admin.component.html","./src/app/user-admin/user-admin.component.ts","./src/app/upload-applicant/upload-applicant.component.html","./src/app/upload-applicant/upload-applicant.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/hours/hours.component.ts","./src/app/hours/hours.component.html","./src/app/department-ta-selection/department-ta-selection.component.html","./src/app/department-ta-selection/department-ta-selection.component.ts","./src/app/adjust-tahours/adjust-tahours.component.ts","./src/app/adjust-tahours/adjust-tahours.component.html","./src/app/ta-apply-and-rank/ta-apply-and-rank.component.html","./src/app/ta-apply-and-rank/ta-apply-and-rank.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/courses.service.ts","./src/app/course-info-and-questions/course-info-and-questions.component.html","./src/app/course-info-and-questions/course-info-and-questions.component.ts","./src/app/questions.service.ts","./src/app/app.module.ts","./src/app/log-in/log-in.component.html","./src/app/log-in/log-in.component.ts","./src/app/instructor-component/qualifications.service.ts","./src/app/applicant-information/applicant-information.component.html","./src/app/applicant-information/applicant-information.component.ts","./src/app/instructor-component/instructor-component.component.html","./src/app/instructor-component/instructor-component.component.ts","./src/app/require-tapositions/require-tapositions.component.ts","./src/app/require-tapositions/require-tapositions.component.html","./src/app/adjust-coursehours/adjust-coursehours.component.ts","./src/app/adjust-coursehours/adjust-coursehours.component.html","./src/app/signup/signup.component.html","./src/app/signup/signup.component.ts","./src/app/upload-rankings/upload-rankings.component.html","./src/app/upload-rankings/upload-rankings.component.ts","./src/app/questions-ml/questions-ml.component.ts","./src/app/questions-ml/questions-ml.component.html","./src/app/app-routing.module.ts","./src/app/upload-course-setup/upload-course-setup.component.html","./src/app/upload-course-setup/upload-course-setup.component.ts","./src/app/export-course/export-course.component.ts","./src/app/export-course/export-course.component.html","./src/app/user.service.ts","./src/app/upload-applicant.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from './../environments/environment';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HoursService {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private http: HttpClient) { }\r\n\r\n  allocateHours(data) {\r\n    return this.http.post(`${environment.apiUrl}/api/coursehours`, data,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n}\r\n","<div style=\"margin-top: 25px; margin-bottom: 50px;\">\r\n    <h2>Upload Instructors</h2>\r\n    <input type=\"file\" #fileImportInput name=\"File Upload\" id=\"csvFileUpload4\" (change)=\"fileListener($event)\"\r\n        accept=\".csv\" />\r\n    <div *ngIf=\"csvError\" style=\"color: red;\">\r\n        <p>Wrong file format!</p>\r\n    </div>\r\n    <div *ngIf=\"data\">\r\n        <h2>Preview:</h2>\r\n        <p *ngFor=\"let row of data.slice(1)\">\r\n            <span *ngFor=\"let d of row.slice(0)\">{{d}} </span>\r\n        </p>\r\n        <button (click)=\"saveData()\">Submit</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\r\nimport { UserService } from '../user.service';\r\nimport { ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upload-user',\r\n  templateUrl: './upload-user.component.html',\r\n  styleUrls: ['./upload-user.component.css']\r\n})\r\nexport class UploadUserComponent implements OnInit {\r\n\r\n  inputHeaders;\r\n  data: any[];\r\n  csvError: boolean = false;\r\n\r\n  constructor(\r\n    private csvParser: NgxCsvParser,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  @ViewChild('fileImportInput', { static: false }) fileImportInput: any;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  fileListener($event: any): void {\r\n\r\n    this.csvError = false;\r\n\r\n    const files = $event.srcElement.files;\r\n    this.csvParser.parse(files[0], { header: false, delimiter: ',' }).pipe()\r\n      .subscribe((data: Array<any>) => {\r\n        this.data = data;\r\n\r\n        // parse the headers of the file for display\r\n        if (data[0] !== \"\") this.inputHeaders = data[0];\r\n\r\n      }, (err: NgxCSVParserError) => {\r\n        console.log(err);\r\n        this.csvError = true;\r\n      })\r\n  }\r\n  saveData() {\r\n    /* \r\n    - parse csv file and format data;\r\n    - send formatted data to DB;\r\n    */\r\n\r\n    let formatted = []\r\n\r\n    // slice from row 1 (row 0 is headers)\r\n    for (let row of this.data.slice(1)) {\r\n      if (row[0] === \"\") continue;\r\n      let obj = {\r\n        instructor: row[0],\r\n        email: row[1]\r\n      }\r\n      formatted.push(obj);\r\n    }\r\n\r\n    // send each row sequentially\r\n    for (let i = 0; i < formatted.length; i++) {\r\n      let obj = formatted[i];\r\n      setTimeout(() => this.userService.addInstructor(obj).subscribe(), i * 100);\r\n    }\r\n    // clear form after user submits\r\n    this.data = undefined;\r\n    (document.getElementById(\"csvFileUpload4\") as HTMLInputElement).value = \"\";\r\n\r\n    // reload\r\n    setTimeout(() => window.location.reload(), 100);\r\n  }\r\n}\r\n","<div style=\"margin-top: 25px;\">\r\n    <h1>Upload Enrollment and Hours</h1>\r\n    <input type=\"file\" #fileImportInput name=\"File Upload\" id=\"csvFileUpload2\" (change)=\"fileListener($event)\"\r\n        accept=\".csv\" />\r\n    <div *ngIf=\"csvError\" style=\"color: red;\">\r\n        <p>Wrong file format!</p>\r\n    </div>\r\n    <div *ngIf=\"data\">\r\n        <h2>Preview:</h2>\r\n        <p *ngFor=\"let row of data.slice(1)\">\r\n            <span *ngFor=\"let d of row.slice(0)\">{{d}} </span>\r\n        </p>\r\n        <button (click)=\"saveData()\">Submit</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\r\nimport { HoursService } from '../hours.service';\r\n\r\n@Component({\r\n    selector: 'app-upload-enrollment',\r\n    templateUrl: './upload-enrollment.component.html',\r\n    styleUrls: ['./upload-enrollment.component.css']\r\n})\r\nexport class UploadEnrollmentComponent implements OnInit {\r\n\r\n    inputHeaders;\r\n    data: any[];\r\n    csvError: boolean = false;\r\n\r\n    constructor(\r\n        private csvParser: NgxCsvParser,\r\n        private hoursService: HoursService\r\n    ) { }\r\n\r\n    @ViewChild('fileImportInput', { static: false }) fileImportInput: any;\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    fileListener($event: any): void {\r\n\r\n        this.csvError = false;\r\n\r\n        const files = $event.srcElement.files;\r\n        this.csvParser.parse(files[0], { header: false, delimiter: ',' }).pipe()\r\n            .subscribe((data: Array<any>) => {\r\n                this.data = data;\r\n\r\n                // parse the headers of the file for display\r\n                if (data[0] !== \"\") this.inputHeaders = data[0];\r\n\r\n            }, (err: NgxCSVParserError) => {\r\n                console.log(err);\r\n                this.csvError = true;\r\n            })\r\n    }\r\n    saveData() {\r\n        /* \r\n        - parse csv file and format data;\r\n        - send formatted data to DB;\r\n        */\r\n\r\n        let formatted = []\r\n\r\n        // slice from row 1 (row 0 is headers)\r\n        for (let row of this.data.slice(1)) {\r\n            if (row[0] === \"\") continue;\r\n            let obj = {\r\n                course: row[0],\r\n                previousEnroll: parseFloat(row[2]),\r\n                previousHours: parseFloat(row[3]),\r\n                currentEnroll: parseFloat(row[4])\r\n            }\r\n            formatted.push(obj);\r\n        }\r\n\r\n        // send each row sequentially\r\n        for (let i = 0; i < formatted.length; i ++) {\r\n            let obj = formatted[i];\r\n\t\t\tsetTimeout(() => this.hoursService.allocateHours(obj).subscribe(), i * 100);\r\n        }\r\n        // clear form after user submits\r\n        this.data = undefined;\r\n        (document.getElementById(\"csvFileUpload2\") as HTMLInputElement).value = \"\";\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"users\" class=\"users\">\r\n    <div *ngIf=\"instructors\">\r\n        <h1>Instructors</h1>\r\n        <ul>\r\n            <li *ngFor=\"let i of instructors\">\r\n                {{i.instructor}}: {{i.course}}\r\n            </li>\r\n        </ul>\r\n        <div>\r\n            <h2>Edit Instructors</h2>\r\n            <p>Change the course assigned to each instructor</p>\r\n            <select id=\"dropdown\" (click)=\"showInstructor()\">\r\n                <option>-</option>\r\n                <option *ngFor=\"let i of instructors\">{{i.instructor}}</option>\r\n            </select>\r\n            <div *ngIf=\"instructor\">\r\n                {{instructor.instructor}} <input id=\"course\" [(ngModel)]=\"instructor.course\"\r\n                    placeholder=\"Assign a course\">\r\n                <button (click)=\"addCourse()\">Save</button>\r\n                <button (click)=\"cancelCourse()\">Cancel</button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <app-upload-user></app-upload-user>\r\n        </div>\r\n    </div>\r\n    <h1>Users</h1>\r\n    <ol>\r\n        <li *ngFor=\"let u of users\">\r\n            <label (click)=\"expand[users.indexOf(u)] = !expand[users.indexOf(u)]\">\r\n                <u style=\"text-decoration-thickness: 1px;\">{{u.email}}</u>\r\n                <span *ngIf=\"!expand[users.indexOf(u)]\">&#x25BC;</span>\r\n                <span *ngIf=\"expand[users.indexOf(u)]\">&#x25B2;</span>\r\n            </label>\r\n            <div *ngIf=\"expand[users.indexOf(u)]\" style=\"margin-bottom: 5px;\">\r\n                <span *ngIf=\"u.admin\" style=\"color: rgb(0, 64, 255);\">Admin</span>\r\n                <span *ngIf=\"!u.admin\" style=\"color: rgb(255, 102, 0);\">User</span>\r\n                <br>\r\n                <span *ngIf=\"u.verified\" style=\"color: green;\">\r\n                    &#10003; Verified\r\n                </span>\r\n                <span *ngIf=\"!u.verified\" style=\"color: red;\">\r\n                    &#10006; Unverified <button (click)=\"verifyUser(u.email)\">Verify</button>\r\n                </span>\r\n            </div>\r\n        </li>\r\n    </ol>\r\n</div>\r\n<div *ngIf=\"error\" style=\"text-align: center;\">\r\n    <h2>Admin access only!</h2>\r\n</div>\r\n<style>\r\n    .users {\r\n        margin: 0 auto;\r\n        width: 100%;\r\n    }\r\n\r\n    .users>ol {\r\n        padding: 0;\r\n    }\r\n\r\n    .users>ol>li {\r\n        padding: 0;\r\n        list-style: none;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .users>ol>li>label {\r\n        font-style: underline;\r\n        padding: 1px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .users>ol>li>label:hover {\r\n        background-color: lightgray;\r\n        cursor: pointer;\r\n    }\r\n\r\n    button {\r\n        background: transparent;\r\n        padding: 2px 5px 1px 5px;\r\n        border-style: solid;\r\n        border-radius: 3px;\r\n        border-width: 1px;\r\n        border-color: black;\r\n        outline: none;\r\n    }\r\n\r\n    button:hover {\r\n        height: 100%;\r\n        background-color: gray;\r\n    }\r\n</style>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-user-admin',\r\n    templateUrl: './user-admin.component.html',\r\n    styleUrls: ['./user-admin.component.css']\r\n})\r\nexport class UserAdminComponent implements OnInit {\r\n\r\n    users = undefined;\r\n    expand: boolean[] = undefined;\r\n    error: boolean = false;\r\n    instructors = undefined;\r\n    instructor = undefined;\r\n\r\n    constructor(\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getUsers();\r\n        this.getInstructors();\r\n    }\r\n\r\n    getUsers() {\r\n        return this.userService.getUsers().subscribe(data => {\r\n            this.users = data;\r\n            this.error = false;\r\n            this.fillExpand();\r\n        }, err => {\r\n            this.users = undefined;\r\n            this.error = true;\r\n            if (err.error) {\r\n            }\r\n        })\r\n    }\r\n\r\n    verifyUser(email) {\r\n        this.userService.verifyUser(email).subscribe(data => {\r\n            setTimeout(() => window.location.reload(), 100);\r\n        }, err => { });\r\n    }\r\n\r\n    getInstructors() {\r\n        this.userService.getInstructors().subscribe(data => {\r\n            this.instructors = data;\r\n        }, err => {\r\n            this.instructors = undefined;\r\n        });\r\n    }\r\n\r\n    fillExpand() {\r\n        this.expand = [];\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            this.expand.push(false);\r\n        }\r\n    }\r\n    showInstructor() {\r\n        let dropdownChoice = (document.getElementById(\"dropdown\") as HTMLInputElement).value;\r\n\r\n        if (dropdownChoice === \"\") return this.instructor = undefined;\r\n        for (let i of this.instructors) {\r\n            if (i.instructor === dropdownChoice) {\r\n                this.instructor = i;\r\n            }\r\n        }\r\n    }\r\n    addCourse() {\r\n        let courseInput = (document.getElementById(\"course\") as HTMLInputElement).value;\r\n\r\n        let body = {\r\n            instructor: this.instructor.instructor,\r\n            course: courseInput\r\n        }\r\n\r\n        this.userService.addInstructorCourse(body).subscribe(() => {\r\n            this.cancelCourse();\r\n        });\r\n    }\r\n    cancelCourse() {\r\n        (document.getElementById(\"dropdown\") as HTMLInputElement).value = \"\";\r\n        this.instructor = undefined;\r\n        setTimeout(() => window.location.reload(), 100);\r\n    }\r\n}\r\n","<div *ngIf=\"user\">\r\n    <h1>Upload Applicant Input</h1>\r\n    <input type=\"file\" #fileImportInput name=\"File Upload\" id=\"csvFileUpload\" (change)=\"fileListener($event)\"\r\n        accept=\".csv\" />\r\n    <div *ngIf=\"csvError\" style=\"color: red;\">\r\n        <p>Wrong file format!</p>\r\n    </div>\r\n    <div *ngIf=\"data\">\r\n        <h2>Preview:</h2>\r\n        <p *ngFor=\"let row of data.slice(1)\">\r\n            <span *ngFor=\"let d of row.slice(0)\">{{d}} </span>\r\n        </p>\r\n        <button (click)=\"saveData()\">Submit</button>\r\n    </div>\r\n    <div>\r\n        <app-upload-enrollment></app-upload-enrollment>\r\n    </div>\r\n    <div style=\"margin-top: 25px\">\r\n        <app-upload-course-setup></app-upload-course-setup>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"!user\">\r\n    <h1>Please Login!</h1>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\r\nimport { UploadApplicantService } from '../upload-applicant.service';\r\nimport { QuestionsService } from '../questions.service';\r\nimport { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n\tselector: 'app-upload-applicant',\r\n\ttemplateUrl: './upload-applicant.component.html',\r\n\tstyleUrls: ['./upload-applicant.component.css']\r\n})\r\nexport class UploadApplicantComponent implements OnInit {\r\n\r\n\tdata: any[];\r\n\tcsvError: boolean = false;\r\n\tuser = undefined;\r\n\r\n\tconstructor(\r\n\t\tprivate csvParser: NgxCsvParser,\r\n\t\tprivate uploadService: UploadApplicantService,\r\n\t\tprivate qService: QuestionsService,\r\n\t\tprivate appComp: AppComponent\r\n\t\t) { }\r\n\r\n\t@ViewChild('fileImportInput', { static: false }) fileImportInput: any;\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.appComp.getUser().then(data => {\r\n\t\t\tthis.user = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfileListener($event: any): void {\r\n\r\n\t\tthis.csvError = false;\r\n\r\n\t\tconst files = $event.srcElement.files;\r\n\t\tthis.csvParser.parse(files[0], { header: false, delimiter: ',' }).pipe()\r\n\t\t\t.subscribe((data: Array<any>) => {\r\n\t\t\t\tthis.data = data;\r\n\t\t\t}, (err: NgxCSVParserError) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tthis.csvError = true;\r\n\t\t\t})\r\n\t}\r\n\r\n\tsaveData() {\r\n\t\t// async parse questions\r\n\t\tnew Promise((resolve, reject) => this.saveQuestions());\r\n\r\n\t\t// parse everything else\r\n\t\tlet formatted = []\r\n\r\n\t\tfor (let row of this.data.slice(1)) {\r\n\t\t\tif (row[0] === \"\") continue;\r\n\t\t\tlet obj = {\r\n\t\t\t\tcourse: row[0],\r\n\t\t\t\tname: row[1],\r\n\t\t\t\temail: row[2],\r\n\t\t\t\tstatus: parseInt(row[3]),\r\n\t\t\t\thours: parseInt(row[4]),\r\n\t\t\t\tranking: parseInt(row[5]),\r\n\t\t\t\tanswers: []\r\n\t\t\t}\r\n\t\t\t// answers is odd indexes after 6\r\n\t\t\tfor (let i = 7; i < row.length; i += 2) {\r\n\t\t\t\tif (row[i] === \"\") continue;\r\n\t\t\t\tobj.answers.push(row[i]);\r\n\t\t\t}\r\n\t\t\tformatted.push(obj);\r\n\t\t}\r\n\r\n\t\tthis.uploadService.addApplicant(formatted).subscribe(res => {\r\n\t\t\t// clear form after submit\r\n\r\n\t\t\t// ****\r\n\t\t\tthis.data = undefined;\r\n\t\t\t(document.getElementById(\"csvFileUpload\") as HTMLInputElement).value = \"\";\r\n\t\t\t// ****\r\n\t\t\t\r\n\t\t}, err => {\r\n\t\t\t// handle error\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\t}\r\n\r\n\tsaveQuestions() {\r\n\t\tlet formatted = []\r\n\r\n\t\t// parse questions\r\n\t\tfor (let row of this.data.slice(1)) {\r\n\t\t\tif (row[0] === \"\") continue;\r\n\t\t\tlet obj = {\r\n\t\t\t\tcourse: row[0],\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\t// answers is even indexes after 6\r\n\t\t\tfor (let i = 6; i < row.length; i += 2) {\r\n\t\t\t\tif (row[i] === \"\") continue;\r\n\t\t\t\tobj.questions.push(row[i]);\r\n\t\t\t}\r\n\t\t\tformatted.push(obj);\r\n\t\t}\r\n\r\n\t\t// send questions\r\n\t\tfor (let i = 0; i < formatted.length; i ++) {\r\n\t\t\tlet q = formatted[i];\r\n\t\t\tsetTimeout(() => this.qService.createQuestions(q).subscribe(), i * 200);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h1>Welcome!</h1>\r\n    <p>This web app is designed for instructors and department chair to use. \r\n        It allows for a seamless TA application process that requires no interaction from the applicants.\r\n        The app allows for file uploads that will automatically parse the data and produce a recommended applicant for each course.\r\n    </p>\r\n\r\n</div>\r\n<div>\r\n    <h2>Team Members</h2>\r\n    <ul>\r\n        <li>Ethan Miranda</li>\r\n        <li>Marcus Del Vecchio</li>\r\n        <li>Matthew Liu</li>\r\n        <li>Stephen Idugboe</li>\r\n    </ul>\r\n</div>\r\n<style>\r\n    div {\r\n        margin: 0 auto;\r\n        width: 55%;\r\n    }\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n    p {\r\n        width: 100%;\r\n    }\r\n</style>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HoursService } from '../hours.service';\r\n\r\n@Component({\r\n  selector: 'app-hours',\r\n  templateUrl: './hours.component.html',\r\n  styleUrls: ['./hours.component.css']\r\n})\r\nexport class HoursComponent implements OnInit {\r\n\r\n  constructor(private hoursService: HoursService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendHours() {\r\n\r\n    // get input values\r\n    let course = (document.getElementById(`course-name`) as HTMLInputElement).value;\r\n\r\n    let prevEnrol = (document.getElementById(`prevEnrol`) as HTMLInputElement).value;\r\n    let prevHours = (document.getElementById(`prevHours`) as HTMLInputElement).value;\r\n    let enrol = (document.getElementById(`enrol`) as HTMLInputElement).value;\r\n\r\n    // exit if empty\r\n    if (course === \"\") return;\r\n\r\n    let data = {\r\n\t\t\tcourse: course,\r\n\t\t\tprevHours: prevHours,\r\n\t\t\tprevEnrol: prevEnrol,\r\n\t\t\tenrol: enrol\r\n    }\r\n\r\n    this.hoursService.allocateHours(data).subscribe(data => {\r\n    });\r\n\r\n    setTimeout(this.clear, 500);\r\n  }\r\n\r\n  clear() {\r\n    (document.getElementById(`course-name`) as HTMLInputElement).value = \"\";\r\n    (document.getElementById(`prevEnrol`) as HTMLInputElement).value = \"\";\r\n    (document.getElementById(`prevHours`) as HTMLInputElement).value = \"\";\r\n    (document.getElementById(`enrol`) as HTMLInputElement).value = \"\";\r\n  }\r\n}\r\n","<link rel = \"stylesheet\" href=\"hours.component.css\"/>\r\n<title>Allocate Hours</title>\r\n<h1>Allocate Hours</h1>\r\n<style type= \"text/css\">\r\n    body{\r\n        padding: 0;\r\n        margin: 0;\r\n        background: indigo;\r\n        \r\n    }\r\n    h1{\r\n        padding: 0;\r\n        margin: 0;\r\n        text-align: center;\r\n        color: #fff;\r\n        background: indigo;\r\n    }\r\n    p{\r\n        text-align: center;\r\n        color: #fff;\r\n    }\r\n    .input{\r\n        text-align: center;\r\n        color: black;\r\n    }\r\n    .buttons{\r\n        text-align: center;\r\n    }\r\n</style>\r\n<div class = 'input'>\r\n    <label>Course: </label>\r\n    <input placeholder=\"Enter a course\" id=\"course-name\">\r\n    <div>\r\n        <input placeholder=\"Enter previous enrollments\" id=\"prevEnrol\">\r\n    </div>\r\n    <div>\r\n        <input placeholder=\"Enter previous TA hours\" id=\"prevHours\">\r\n    </div>\r\n    <div>\r\n        <input placeholder=\"Enter current enrollments\" id=\"enrol\">\r\n    </div>\r\n</div>\r\n<div class = 'buttons'>\r\n    <button (click)=\"sendHours()\">Save</button>\r\n    <button (click)=\"clear()\">Cancel</button>\r\n</div>\r\n<p>&copy; Blue Cheese 2021</p>","<h1 style=\"color: indigo; font-weight: 800;\">TA Selection Component</h1>\r\n<div>\r\n    <app-applicant-information></app-applicant-information>\r\n</div>\r\n<div style=\"height: 100%;\">\r\n<table class=\"tableNoBorder\"> \r\n    <tr style=\"text-align: top; margin-top: 5px; height: 10%;\">\r\n        <td class=\"leftInnerTableTd\">\r\n            <div class=\"innerTableDiv\">\r\n                <!-- table displaying a list of courses the ECE members can select one from to view the rankings and assign a TA-->\r\n\r\n                <h1>Course List</h1>\r\n                <table class=\"subTables\">\r\n                    <tr>\r\n                        <td class=\"tdWithBorder\">Course Code</td>\r\n                        <td class=\"tdWithBorder\">TA Hours Required.</td> \r\n                        <!--<td> TAs Assigned? </td>-->\r\n                        <td class=\"tdWithBorder\">TA required</td>\r\n                    </tr>\r\n\r\n                    <!-- looping through courses data and rendering row for each course -->\r\n                    <tr *ngFor=\"let course of courseData\" (click)=\"courseSelected(course)\">\r\n                        <td class=\"courseLabel\"> {{ course.course }} </td>\r\n                        <td class=\"tdWithBorder\"> {{ course.hours }} </td>\r\n                        <td class=\"tdWithBorder\"> {{ course.requires }} </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </td>\r\n        <td class=\"rightInnerTableTd\">\r\n            <div class=\"innerTableDiv\" style=\"margin-top: 250px;\">\r\n                <h2><u>{{ this.selectedCourse }} TA Selection</u></h2>\r\n\r\n                <!-- Sub tables displaing the professor and TA rankings for each course-->\r\n                <table>\r\n                    <tr style=\"width: 70%;\">\r\n                        <td style=\" height: 20%; width:70%; margin-left: 10px; margin-right: 10px;\">\r\n                            <h2><td>Professor {{ this.selectedCourseInstructor }} Rankings</td></h2>\r\n                            <table class=\"subTables\">\r\n                                <ng-container *ngIf=\"showInstructorTable\">\r\n                                    <tr>\r\n                                        <td class=\"tdWithBorder\">TA Name</td>\r\n                                        <td class=\"tdWithBorder\">Hours Left</td>\r\n                                    </tr>\r\n\r\n                                    <tr *ngFor=\"let ta of this.instructorRankings\" (click)=\"this.taSelected(ta.name)\">\r\n                                        <td class=\"courseLabel\">{{ ta.name }}</td>\r\n                                        <td class=\"tdWithBorder\">{{ ta.hoursLeft }}</td>\r\n                                        <td style=\"white-space: nowrap; overflow: visible;\" *ngIf=\"ta.name == this.selectedTaName\"> <h1>→</h1> </td>\r\n                                    </tr>\r\n                                </ng-container>\r\n                            </table>\r\n                        </td>  \r\n                        <td style=\"height: 20%; width:30%;\">\r\n\r\n                        </td> \r\n                        <td style=\"width:80%; margin-left: 20px; margin-right: 10px;\">\r\n                            <ng-container *ngIf=\"taRowSelected\">\r\n                                <h2>{{ this.selectedTaName }}'s Rankings</h2>\r\n                                <table class=\"subTables\">\r\n                                    <tr>\r\n                                        <td class=\"tdWithBorder\">Course</td>\r\n                                        <td class=\"tdWithBorder\">Rank</td>\r\n                                    </tr>\r\n\r\n                                    <!-- TA rankings table-->\r\n                                    <tr *ngFor=\"let course of this.taRankings; let i = index\"> \r\n                                        <td class=\"tdWithBorder\">\r\n                                            {{ course.course }}\r\n                                        </td>\r\n                                        <td class=\"tdWithBorder\">\r\n                                            {{ i+1 }}\r\n                                        </td>\r\n                                    </tr> \r\n                                </table>\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                    <tr><div style=\"height: 50px;\"></div></tr>\r\n                    <!-- section below the two sub tables: select a TA for said course -->\r\n                    <tr>\r\n                        <td style=\"column-span: 2;\" *ngIf=\"selectedCourseHours != 0\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h2>Suggested Hours Assignment for {{ this.selectedCourse }} :</h2>\r\n                                    </td>\r\n                                    <ul *ngIf=\"assignmentComplete == false\">\r\n                                        <li *ngFor=\"let applicant of assignedTAs\">{{ applicant }}: {{ this.assignedHours[applicant] }} hours</li>\r\n                                    </ul>\r\n                                    <p style=\"color: red;\" *ngIf=\"assignmentComplete\">The assignments have been applied.</p>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style=\"width: 10%;\">\r\n                                        <button (click)=\"assignSuggestedApplicant()\">Apply this assignent plan</button>\r\n                                        <!--<p>Note that after hours have been assigned, their assigned hours can be manually edited</p>-->\r\n                                    </td>\r\n                                    <!--<td style=\"width: 5%; text-align: center;\"><h2>OR</h2></td> -->\r\n                                       \r\n                                    <!-- removed \r\n                                    <td style=\"height: 10%; width: 20%;\">\r\n\r\n                                        <button (click)=\"alternativeApplicant = !alternativeApplicant; applicantSelected = true;\">Enter alternative applicant</button>\r\n                                        <ng-container *ngIf=\"alternativeApplicant\">\r\n                                            <select id=\"taSelection\" [(ngModel)]=\"this.selectedApplicant\">\r\n                                                <option *ngFor=\"let applicant of this.instructorRankings\" [value]=\"applicant.name\">{{ applicant.name }}</option>\r\n                                            </select>\r\n                                        </ng-container>\r\n                                    </td> -->\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                        <td>\r\n                            <p *ngIf=\"selectedCourseHours == 0\" style=\"background: #ffcccb; color: black;\">This course has no hours left to be assigned</p>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- removed \r\n                    <ng-container *ngIf=\"applicantSelected\">\r\n                        <ng-container *ngIf=\"!alternativeApplicant\">\r\n                            Number of hours to assign {{ this.bestApplicant }}\r\n                        </ng-container>\r\n\r\n                        <ng-container *ngIf=\"alternativeApplicant\">\r\n                            Number of hours to assign {{ this.selectedApplicant }}\r\n                        </ng-container>\r\n\r\n                        <input type=\"text\" id=\"taAssignmentHours\">\r\n                        <br/>\r\n                        <button (click)=\"assignTA()\">Submit Selection</button>\r\n                    </ng-container>\r\n                    -->\r\n                </table>\r\n            </div>\r\n        </td>\r\n    </tr>\r\n</table>\r\n</div>","import { createOfflineCompileUrlResolver } from '@angular/compiler';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\r\nimport { string } from 'joi';\r\nimport { isUndefined } from 'util';\r\nimport { CoursesService } from '../courses.service'\r\n\r\n@Component({\r\n  selector: 'app-department-ta-selection',\r\n  templateUrl: './department-ta-selection.component.html',\r\n  styleUrls: ['./department-ta-selection.component.css']\r\n})\r\nexport class DepartmentTASelectionComponent implements OnInit {\r\n\r\n  constructor(private CoursesService: CoursesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourseList();\r\n  }\r\n  \r\n  selectedCourse = \"\";\r\n  selectedCourseInstructor;\r\n  courseData = [];  // arrary (or object?) of course data for each course\r\n  showTaRankingTable = false;\r\n  showInstructorTable = false;\r\n  taRowSelected = false;\r\n  selectedTaName;\r\n  chooseAlternativeApplicant = false;\r\n  bestApplicant; // the best applicant for the currently selected course (name as string)\r\n  alternativeApplicant = false;\r\n  selectedApplicant; // either set to the default bestApplicant or to the applicant chosen from the dropdown if alternativeApplicant is true\r\n  applicantSelected = false; // becomes true once the user clikcs the \"choose this applicant\" or \"enter alternative applicant\" button\r\n  selectedCourseHours; // the number of TA hours required to be assigned to the selected course\r\n  assignedHours;\r\n  assignedTAs = [];\r\n  assignmentComplete = false;\r\n\r\n\r\n  // rankings arrays\r\n    instructorRankings = [];  \r\n    //initialInstructorRankings = []; // the same as instructorRankings but we modify the instructor rankings in the getBestApplicsnt() method but we don't want to show those changes in the HTML tables (todo make one local)\r\n    taRankings = [];    // format = [ {ta: \"name\", rankedThisCourse: 1}, ... ]\r\n\r\n  courseSelected(course){\r\n\r\n    // resetting TA variables and data\r\n      this.assignmentComplete = false;\r\n      this.assignedHours = {};\r\n      this.assignedTAs = [];\r\n      \r\n    let courseCode = course.course\r\n    this.selectedCourse = courseCode;\r\n    this.selectedCourseHours = course.hours;\r\n    // console.log(courseCode + \" selected\");\r\n    this.showInstructorTable = true;\r\n\r\n    // getting the list of rankings\r\n    this.CoursesService.getInstructorRankings(courseCode).subscribe((data) => {\r\n      this.instructorRankings = (data as Array<any>).slice();\r\n      //this.initialInstructorRankings = (data as Array<any>).slice();\r\n      //console.log(this.initialInstructorRankings);\r\n      // console.log(this.instructorRankings);\r\n\r\n      // after loading instructor rankings, calculate best applicant\r\n      this.getBestApplicant();\r\n    }); \r\n\r\n    \r\n    // todo do the same for TA rankings\r\n      //this.TaRankings = this.this.CoursesService.getCourseTARankings(courseCode) as any; \r\n      // route not implimented yet^\r\n  }\r\n\r\n  taSelected(taName){\r\n    this.taRowSelected = true;\r\n    this.selectedTaName = taName;\r\n\r\n    //let selectedTA = (document.getElementById(\"taSelection\") as HTMLInputElement).value; \r\n    this.CoursesService.getApplicantRankings(taName).subscribe( (data) => {\r\n      this.taRankings = data as any;\r\n      // console.log(this.taRankings);\r\n      this.showTaRankingTable = true;\r\n    });\r\n    //edit hours and push to db\r\n  }\r\n\r\n  getCourseList(){\r\n    this.CoursesService.getCourseData().subscribe((data) => {\r\n      this.courseData = data as any;\r\n    });\r\n  }\r\n\r\n  assignTA(){\r\n    let hours = (document.getElementById(\"taAssignmentHours\") as HTMLInputElement).value; \r\n    let selectedTA = this.bestApplicant;\r\n\r\n    if(this.alternativeApplicant == true){\r\n      selectedTA = (document.getElementById(\"taSelection\") as HTMLInputElement).value; \r\n    }\r\n\r\n    // todo verify input is an int \r\n    if(hours == undefined || +hours < 1){\r\n      alert(\"please enter an integer number of hours to assign to the selected TA, greater than zero\");\r\n    }\r\n\r\n    let assignmentData = {\r\n      name: selectedTA,\r\n      hours: +hours,\r\n    };\r\n    \r\n\r\n    // console.log(this.selectedCourse);\r\n    // console.log(assignmentData);\r\n    \r\n    this.CoursesService.assignInstructoryRankings(this.selectedCourse, assignmentData).subscribe( (response) => {\r\n      // console.log(response);\r\n      if(response === \"Applicant already assigned!\"){\r\n        alert(response);\r\n      }\r\n    });\r\n    this.applicantSelected = false;\r\n  }\r\n\r\n  // calculate the best applicant for the TA position\r\n  getBestApplicant(){\r\n\r\n    let weightData = {};\r\n    \r\n    let instructorRankings = [];\r\n    this.instructorRankings.forEach(val => instructorRankings.push(Object.assign({}, val)));\r\n\r\n    // { taNAme: 5, taName: 3}\r\n\r\n    // inserting all the TA names into the weight array and giving them an initial weight based on their rank in the instructor array.\r\n    // also giving them a ranking based on their status\r\n    // status 1 gets weight = 4, status 2 gets weight = 2, status 3 gets weight = 0\r\n\r\n      for(let i = 0; i < instructorRankings.length; i++){\r\n        weightData[instructorRankings[i].name] = instructorRankings.length - i;\r\n\r\n        if(instructorRankings[i].status != 1 && instructorRankings[i].status != 2 && instructorRankings[i].status != 3 ){\r\n          // console.log(\"Error, applicant does not have status property of value 1, 2 or 3\");\r\n        }\r\n\r\n        // giving weight based on status\r\n        if(instructorRankings[i].status == 1){\r\n          weightData[instructorRankings[i].name] += 4;\r\n        }\r\n\r\n        else if(instructorRankings[i].status == 2){\r\n          weightData[instructorRankings[i].name] += 2;\r\n        }\r\n        // give no additional weight is status == 3\r\n      }\r\n    \r\n    // console.log(weightData);\r\n\r\n    // adjusting the weights based on the TA rankings now\r\n    \r\n      for(let i = 0; i < this.taRankings.length; i++){\r\n        for(let j of Object.keys(weightData)){\r\n          if(this.taRankings[i].name == j){\r\n\r\n            // adding weight to the TA based on where the ta is in the TA rankings array order\r\n            weightData[j] += this.taRankings.length - i;\r\n          }\r\n        }\r\n      }\r\n    \r\n    // console.log(weightData);\r\n\r\n    // todo now adjusting weight based on TA and course Hours\r\n    // let sleectedCourseHours = ?  <-- need to get this from thew formula\r\n    //let selectedCourseHours = 15; \r\n    let selectedCourseHours = this.selectedCourseHours;\r\n    // console.log(\"Selected course hours: \" + selectedCourseHours);\r\n\r\n    // here is also where we split the TA hours among multiple TAs ?\r\n\r\n    let highestWeight = 0;\r\n    //let chosenApplicants = []; remoed; same as assignedHours\r\n    let bestApplicant;\r\n    let remainingCourseHours = selectedCourseHours;\r\n    let assignedHours = {};\r\n\r\n    \r\n    // selecting the best applicant based on weight now and setting it to bestApplicant property\r\n      \r\n      outerLoop: for(let x = 0; ; x++) { // this loop is used to repeat the assignment process as many times until enough TAs have been assigned to cover the courses requred hours.\r\n        \r\n        if(remainingCourseHours >= 10){  // just in case some course doesn't have less than 10 hours to start (alglorithm would break)\r\n\r\n          if(!this.checkTAs(assignedHours)){ // check if there are even any remaining TAs\r\n            console.log(\"error, no remaining TAs\");\r\n            break outerLoop;\r\n          }\r\n\r\n          for(let i of instructorRankings){  // adding 4 weight if the TA has the exact number of hours to fulfill the course\r\n            if(i.hoursLeft == remainingCourseHours){\r\n              console.log(i.name + \" weight increased by 4; exact number of hours\");\r\n              weightData[i.name] += 4;\r\n            }\r\n          }\r\n            \r\n          // finding the next best applicant that has not already been assigned hours\r\n\r\n          quickBreak: for(let i of Object.keys(weightData)){  \r\n\r\n              // skip applicants that have no hours left TODO apply this in other places\r\n\r\n                for(let x of instructorRankings){\r\n                  if(x.hoursLeft == 0 && x.name == i){\r\n                    continue quickBreak;\r\n                  }\r\n                }\r\n\r\n              if(weightData[i] > highestWeight && (!Object.keys(assignedHours).includes(i))){  // also check if the \"highest weighted applicant\" has already been assigned hours (since we looping through)\r\n                highestWeight = weightData[i];\r\n                bestApplicant = i;\r\n              }\r\n              else if(weightData[i] == highestWeight){\r\n                // console.log(\"equal weights; brokem\");\r\n              }\r\n            }\r\n\r\n          // now assign that applicant their desired hours\r\n\r\n                // loop through instructor rankings, get the hours the TA applied for (for this course specifically) and assign them to the TA\r\n                  \r\n                  for(let applicant of instructorRankings){\r\n                    if(applicant.name == bestApplicant){\r\n                      assignedHours[bestApplicant] = applicant.hoursLeft; // todo fix backend to get hours specific to course; this doesnt work rn\r\n                      remainingCourseHours -= applicant.hoursLeft;\r\n                      // console.log(weightData);\r\n                      // console.log(applicant.hoursLeft + \" hours assigned to \" + bestApplicant + \"\\n remaining course hours: \" + remainingCourseHours);\r\n                      applicant.hoursLeft = 0;    // this sets it to zero yea? pass by reference? todo verify\r\n                    }\r\n                  }\r\n          }\r\n          bestApplicant = undefined;  // resetting before we get the next best\r\n          highestWeight = 0;\r\n        \r\n          if(remainingCourseHours == 0){\r\n            // console.log(\"zero course hours left to be assigned; assignment complete\");\r\n            break outerLoop;\r\n          }\r\n        \r\n          // now checking if the remaining hours are less than 10 so that we need to assign one more TA partial hours and be done\r\n\r\n            if(remainingCourseHours < 5){     // assign the next best TA who signed up for 5 hours or has less than 5 (the exact amount)\r\n\r\n              if(!this.checkTAs(assignedHours)){ // check if there are even any remaining TAs\r\n                // console.log(\"error, no remaining TAs\");\r\n                break outerLoop;\r\n              }\r\n              \r\n              for(let i of instructorRankings){\r\n\r\n                if(i.hoursLeft !<= 5){\r\n                  continue;\r\n                }        \r\n\r\n                if(i.hoursLeft == remainingCourseHours){ // add 4 weight if they have the exact number of hours (or 3?)\r\n                  weightData[i.name] += 4;\r\n                }\r\n\r\n                if(weightData[i.name] > highestWeight && (!Object.keys(assignedHours).includes(i))){  // also check if the \"highest weighted applicant\" has already been assigned hours (since we looping through)\r\n                  highestWeight = weightData[i];\r\n                  bestApplicant = i.name;\r\n                }\r\n              }\r\n\r\n              // now assign the TA the remaining course hours (will be one or more less than what they wanted)\r\n                assignedHours[bestApplicant] = remainingCourseHours;\r\n                // console.log(weightData);\r\n                // console.log(remainingCourseHours + \" hours assigned to \" + bestApplicant + \"\\n remaining course hours: 0\");\r\n                remainingCourseHours = 0;\r\n              \r\n              // no need to reduce the instructor rankings because we are done\r\n              // actually probably best to since we need to push this shit when we submit\r\n                for(let i of instructorRankings){\r\n                  if(i.name == bestApplicant){\r\n                    i.hoursLeft -= remainingCourseHours;\r\n                  }\r\n                }\r\n\r\n              // now loop through the weightData and grab the applicant that has the highest weight as calculated above\r\n\r\n              // console.log(\"the course has now been fully assigned\");\r\n              break outerLoop; \r\n            }\r\n            else if(remainingCourseHours <= 10){  // else if between 5 and 10 assign to the next best TA who picked 10 hours\r\n\r\n              if(!this.checkTAs(assignedHours)){ // check if there are even any remaining TAs\r\n                // console.log(\"error, no remaining TAs\");\r\n                break outerLoop;\r\n              }\r\n\r\n              // edge case for exactly 5 \r\n\r\n                if(remainingCourseHours == 5){\r\n\r\n                  // check if there is even a TA with exactly 5, put them into array\r\n                  let fittingTAs = [];\r\n                  for(let i of instructorRankings){\r\n                    if(i.hoursLeft == 5){\r\n                      fittingTAs.push(i.name);\r\n                      // console.log(i.name + \" added to fitting TAs\");\r\n                    }\r\n                  }\r\n\r\n                  if(fittingTAs.length != 0){\r\n\r\n                    // getting the highest weighted TA in the array of those who have exactly 5 hours\r\n                    for(let i of Object.keys(weightData)){\r\n                      if(weightData[i] > highestWeight && (!Object.keys(assignedHours).includes(i))){\r\n                        highestWeight = weightData[i];\r\n                        bestApplicant = i;\r\n                      }\r\n                    }\r\n                    // and now assigning them\r\n                      assignedHours[bestApplicant] = remainingCourseHours;\r\n                      // console.log(weightData);\r\n                      // console.log(remainingCourseHours + \" hours assigned to \" + bestApplicant + \"\\n remaining course hours: 0\");\r\n                      remainingCourseHours = 0;\r\n                      \r\n                      // reducing instructor rakings since we are gunna push this to db\r\n                      for(let i of instructorRankings){\r\n                        if(i.name == bestApplicant){\r\n                          i.hoursLeft -= remainingCourseHours;\r\n                        }\r\n                      }\r\n                      break outerLoop;\r\n                  }\r\n\r\n                  // todo do something when fitting TAs length is zero?\r\n                  // console.log(\"fitting TAs array length zero; assigning TA with non-exact hours\");\r\n                }\r\n                // else {\r\n                  // else continue on and assign a TA with more than 5 hours\r\n\r\n                      for(let i of instructorRankings){\r\n\r\n                          // console.log(i);\r\n                          \r\n                          if(i.hoursLeft < remainingCourseHours){ // TODO do check at end if there is still no TA assigned (none with more hours but that could be assigned, assign one with less than the number of hours? or just leave it and don;t assign a TA?)\r\n                            // console.log(i.name + \" has less than \" + remainingCourseHours + \" hours left, skipping\");\r\n                            continue;\r\n                          }\r\n\r\n                          if(i.hoursLeft == remainingCourseHours){ // add 4 weight if they have the exact number of hours (or 3?)\r\n                            weightData[i.name] += 4;\r\n                            // console.log(i.name + \" has the exact number of hours; adding 4 weight\");\r\n                          }\r\n\r\n                          if(weightData[i.name] > highestWeight && (!Object.keys(assignedHours).includes(i))){  // also check if the \"highest weighted applicant\" has already been assigned hours (since we looping through)\r\n                            highestWeight = weightData[i];\r\n                            // console.log(i);\r\n                            bestApplicant = i.name;\r\n                          }\r\n                      }\r\n\r\n                    // now assign the TA said amount of hours\r\n                      assignedHours[bestApplicant] = remainingCourseHours;\r\n                      // console.log(weightData);\r\n                      // console.log(remainingCourseHours + \" hours assigned to \" + bestApplicant + \"\\n remaining course hours: 0\");\r\n                      remainingCourseHours = 0;\r\n\r\n                    // reducing instructor rakings since we are gunna push this to db\r\n                      for(let i of instructorRankings){\r\n                        if(i.name == bestApplicant){\r\n                          i.hoursLeft -= remainingCourseHours;\r\n                        }\r\n                      }\r\n                //}\r\n              break outerLoop;\r\n            }\r\n          // else reloop and assign another TA, then repeat\r\n      }\r\n      // console.log(\"the course has now been fully assigned\");\r\n      this.assignedHours = assignedHours;\r\n      this.assignmentComplete = false;\r\n\r\n      for(let i of Object.keys(this.assignedHours)){\r\n        this.assignedTAs.push(i)\r\n      }\r\n\r\n      // console.log(this.assignedHours);\r\n      // console.log(\"assigned TAs\");\r\n  }\r\n\r\n  checkTAs(assignedHours){\r\n    let instructorRankings = this.instructorRankings.slice();\r\n\r\n    for(let i of instructorRankings){\r\n      if(Object.keys(assignedHours).includes(i.name) || i == undefined || i == null){\r\n        continue;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // asssign the suggested applicant to the TA for this class\r\n  assignSuggestedApplicant(){\r\n    this.applicantSelected = true;\r\n    //this.alternativeApplicant = false;\r\n    let taHours = this.assignedHours;    \r\n\r\n    // assign the number of hours to the chosen TA\r\n    for(let applicant of Object.keys(taHours)){\r\n\r\n      let assignmentData = {\r\n        name: applicant,\r\n        hours: +taHours[applicant],\r\n      };\r\n\r\n      this.CoursesService.assignInstructoryRankings(this.selectedCourse, assignmentData).subscribe( (response) => {\r\n        // console.log(response);\r\n        if(response === \"Applicant already assigned!\"){\r\n          alert(response);\r\n        }\r\n      });\r\n    }\r\n    this.assignmentComplete = true;\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TA } from './TAhours';\r\nimport { environment } from '../../environments/environment';\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable()\r\nexport class TAservice {\r\n\r\n\r\nprivate getTAstring: string = `${environment.apiUrl}/api/getTAhours`;\r\nprivate postTAstring: string = `${environment.apiUrl}/api/replaceTAhours`;\r\n\r\nconstructor(\r\n  private userService: UserService,\r\n  private http: HttpClient) { }\r\n\r\npostTA(pdn) {\r\nreturn this.http.post(this.postTAstring, pdn,  { headers: this.userService.getAuthorizationHeader() }).toPromise().then(data => {\r\n  console.log(data);\r\n});\r\n    }\r\n\r\ngetTA(): Observable<TA[]> {\r\nreturn this.http.get<TA[]>(this.getTAstring,  { headers: this.userService.getAuthorizationHeader() });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-adjust-tahours',\r\n  templateUrl: './adjust-tahours.component.html',\r\n  styleUrls: ['./adjust-tahours.component.css']\r\n})\r\nexport class AdjustTahoursComponent implements OnInit {\r\n\r\n  TA = [];\r\n  display = [];\r\n\r\n\r\n  constructor(private _TAservice:TAservice) { }\r\n\r\n  ngOnInit(): void {\r\n    this._TAservice.getTA().subscribe((data) => {\r\n      this.TA = data;\r\n      this.displayTA();\r\n    });\r\n  }\r\n\r\n  displayTA(){ \r\n    this.display = []\r\n    for (var key in this.TA) {\r\n      this.display.push(this.TA[key])\r\n    }\r\n  }\r\n  searchTA(){ \r\n    let TAname = (document.getElementById(\"TAname\") as HTMLInputElement).value; \r\n    let TAcourse = (document.getElementById(\"TAcourse\") as HTMLInputElement).value; \r\n    let newTAhours = (document.getElementById(\"newTAhours\") as HTMLInputElement).value;\r\n    let found = false; \r\n\r\n   \r\n   \r\n\r\n    //handle eventS where a box was not filled\r\n    if (!TAname) {\r\n      alert(\"Please in put the name of the TA\")\r\n     }\r\n\r\n    else if(!TAcourse) {\r\n      alert(\"Please in put the course of the TA\")\r\n     }\r\n\r\n    else if(!newTAhours) {  \r\n      alert(\"Please a number for the new TA hours\")\r\n     }\r\n\r\n     //if everything is filled out \r\n     else  {\r\n      for (var key in this.TA) {\r\n       \r\n    \r\n        if (TAname.toLowerCase() == this.TA[key].name.toLowerCase() && TAcourse.toLowerCase() == this.TA[key].course.toLowerCase()) {\r\n          //TA with that name and course was found\r\n\r\n          //now do post request that replaces the tas hours\r\n           this.TA[key].hours = newTAhours;\r\n           found = true;\r\n\r\n           let postData = {\r\n            name : this.TA[key].name,\r\n            hours : this.TA[key].hours,\r\n            course : this.TA[key].course,\r\n           } \r\n           this._TAservice.postTA(postData);  }\r\n\r\n     }\r\n     //handle situation where the course or the TA is not found\r\n     if(found == false) {\r\n      alert(\"Sorry a TA with that course was not found\")\r\n     }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n<div>\r\n  <h1>Adjust TA Hours</h1>\r\n<div *ngIf = \"TA.length != 0\">\r\n    <input type=\"text\" id=\"TAname\" placeholder =\"TA Name\"><br>\r\n    <input type=\"text\" id=\"TAcourse\" placeholder =\"TA Course\"><br>\r\n    <label for=\"newTAhours\">Please input the new hours for the TA:</label><br>\r\n    <input type=\"text\" id=\"newTAhours\" placeholder =\"New TA hours\"><br>\r\n    <button (click)= \"searchTA()\">Replace hours</button>\r\n</div>\r\n<div>\r\n    <table *ngIf = \"display.length != 0\"> \r\n      <tr> \r\n        <th>Name:</th>\r\n        <th></th>\r\n        <th>Hours:</th>\r\n        <th></th>\r\n        <th>Course:</th>\r\n      </tr>\r\n\r\n      <tr *ngFor = \"let i of display\"> \r\n        <td>{{i.name}}</td>\r\n        <td></td>\r\n        <td>{{i.hours}}</td>\r\n        <td></td>\r\n        <td>{{i.course}}</td>\r\n      </tr>\r\n    </table>\r\n</div>\r\n</div>\r\n<style>\r\n  div {\r\n    margin-top: 50px;\r\n  }\r\n</style>\r\n","\r\n<h1 style=\"color: indigo; font-weight: 800;\">TA Apply and Rank Section</h1>\r\n\r\n<h2>Courses to Apply to</h2>\r\n<table>\r\n    <tr>\r\n        <td>\r\n            Course\r\n        </td>\r\n        <td>\r\n            Course Hours Required\r\n        </td>\r\n        <td>\r\n            Have applied\r\n        </td>\r\n        <td>\r\n            Current Rank\r\n        </td>\r\n    </tr>\r\n    <ng-container *ngFor=\"let course of this.courseData\">\r\n        <tr>\r\n            <td (click)=\"courseRowSelected(course)\">{{ course.course }}</td>\r\n            <td (click)=\"courseRowSelected(course)\">{{ course.hours }}</td>\r\n            <!-- <td (click)=\"courseRowSelected(course)\" >{{ course.course }}</td> if they have applied -->\r\n            <td> <select></select> </td> <!-- show only IF they have applied -->\r\n        </tr>\r\n        <tr *ngIf=\"course.expanded == true\">\r\n            <h2> Apply to {{ course.course }} </h2>\r\n            <!-- course apply section -->\r\n            <!-- display message if they have already applied -->\r\n        </tr>\r\n    </ng-container>\r\n</table>\r\n\r\n<button (click)=\"submitRankings()\">Submit Rankings</button>\r\n<app-upload-applicant></app-upload-applicant>\r\n<app-upload-rankings></app-upload-rankings>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CoursesService } from '../courses.service';\r\nimport { QuestionsService } from '../questions.service';\r\n\r\n@Component({\r\n  selector: 'app-ta-apply-and-rank',\r\n  templateUrl: './ta-apply-and-rank.component.html',\r\n  styleUrls: ['./ta-apply-and-rank.component.css']\r\n})\r\nexport class TAApplyAndRankComponent implements OnInit {\r\n\r\n  constructor(private CoursesService: CoursesService, private qService: QuestionsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  courseData; // course data to be rendered into the table\r\n  \r\n\r\n  /* dummy data\r\n    notAppliedCourseList = { \r\n      se3313: { questions: [\"question 1\", \"question2\", \"question3\"],\r\n                hours: 24,\r\n              },\r\n      se3350: { questions: [\"question 1\", \"question2\", \"question3\"],\r\n                hours: 10,\r\n              }\r\n    };\r\n\r\n    // order determines 'rank'\r\n    appliedCourseList = {\r\n      se2202: { questions: [\"question 1\", \"question2\", \"question3\"],\r\n                hours: 5,\r\n              },\r\n      se3309: { questions: [\"question 1\", \"question2\", \"question3\"],\r\n                hours: 15,\r\n            },\r\n      ece3375: { questions: [\"question 1\", \"question2\", \"question3\"],\r\n                 hours: 20,\r\n      }\r\n    }; \r\n  */\r\n\r\n  courseRowSelected(course){\r\n    this.courseData.course.expanded = true;\r\n  }\r\n \r\n  getCourses(){\r\n    // fetch list of courses\r\n    this.CoursesService.getCourseData().subscribe( (data) => {\r\n      this.courseData = data;\r\n\r\n      for(let i of this.courseData){\r\n        i.expanded = false;\r\n      };\r\n\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  getCourseQuestions(){\r\n\r\n  }\r\n\r\n  selectCourse(){\r\n    // expand course info / trigger popup\r\n    // allow TA user to fill out application (data already retrieved)\r\n  }\r\n\r\n  submitRankings(){\r\n    // push ranking order to db\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h1>TA-Course Matching Portal</h1>\r\n  <nav>\r\n    <ul>\r\n      <li><a routerLink=\"\">Home</a></li>\r\n      <li><a routerLink=\"/upload\">Upload Files</a></li>\r\n      <!-- <li><a routerLink=\"/RequireTAPositionsComponent\">Positions requiring TAs</a></li> -->\r\n      <!-- <li><a routerLink=\"/questions\">Questions and qualifications</a></li> -->\r\n      <li><a routerLink=\"/view-courses\">Courses</a></li>\r\n      <li><a routerLink=\"/view-applicants\">View Applicants</a></li>\r\n      <li><a routerLink=\"/view-tas\">View TA's</a></li>\r\n      <li><a routerLink=\"/users\">Users</a></li>\r\n      <li class=\"right\" *ngIf=\"!user\"><button (click)=\"login()\">Log In</button></li>\r\n      <li class=\"right\" *ngIf=\"user\"><button (click)=\"logout()\">Log Out</button></li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n<div *ngIf=\"user\">\r\n  <h2>Welcome {{user.email}}</h2>\r\n</div>\r\n<div *ngIf=\"!user && showlogin\">\r\n  <app-log-in></app-log-in>\r\n</div>\r\n<div\r\n  style=\"position: relative; height: 100%; margin: 0 auto; margin-top: 25px; padding: 25px 0 25px 0; width: 75%; margin-bottom: 50px;\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<div class='copy'>\r\n  <p>&copy; Team 6 - \"Blue Cheese\" 2021</p>\r\n</div>\r\n<style type='text/css'>\r\n  div {\r\n    position: relative;\r\n    padding-bottom: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n\r\n  nav {\r\n    display: block;\r\n    background-color: gray;\r\n    padding: 0;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    position: absolute;\r\n    z-index: 1;\r\n  }\r\n\r\n  nav>ul {\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    width: 100%;\r\n    list-style: none;\r\n  }\r\n\r\n  nav>ul>li {\r\n    float: left;\r\n  }\r\n\r\n  nav>ul>li>a,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    background-color: gray;\r\n    display: block;\r\n    color: white;\r\n    text-align: center;\r\n    padding: 16px;\r\n    text-decoration: none;\r\n  }\r\n\r\n  nav>ul>li>a:hover,\r\n  button:hover {\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: blue;\r\n  }\r\n\r\n  h1 {\r\n    position: relative;\r\n    margin: 0 auto;\r\n    padding: 25px 0 25px 0;\r\n    color: white;\r\n    text-align: center;\r\n    background: indigo;\r\n  }\r\n\r\n  h2 {\r\n    text-align: center;\r\n    color: white;\r\n    background: indigo;\r\n  }\r\n\r\n  .copy {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    position: fixed;\r\n    bottom: 0;\r\n    text-align: center;\r\n    color: white;\r\n    background: indigo;\r\n  }\r\n\r\n  .right {\r\n    position: absolute;\r\n    right: 0px;\r\n  }\r\n</style>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './user.service';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\tuser = undefined;\r\n\tshowlogin: boolean = false;\r\n\r\n\tconstructor(\r\n\t\tprivate userService: UserService,\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.checkLogin();\r\n\t}\r\n\r\n\tcheckLogin() {\r\n\t\tif (!localStorage.getItem('token')) return;\r\n\t\tthis.userService.getEmail().subscribe(data => {\r\n\t\t\tthis.showlogin = false;\r\n\t\t\tthis.user = data;\r\n\t\t}, err => {\r\n\t\t\tthis.user = undefined;\r\n\t\t\tthis.userService.logout();\r\n\t\t});\r\n\t}\r\n\r\n\tlogin() {\r\n\t\tthis.showlogin = !this.showlogin;\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.userService.logout();\r\n\t\tthis.user = undefined;\r\n        setTimeout(() => window.location.reload(), 100);\r\n\t}\r\n\r\n\tpublic getUser() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (!localStorage.getItem('token')) resolve(undefined);\r\n\t\t\tthis.userService.getEmail().subscribe(data => {\r\n\t\t\t\tresolve(data);\r\n\t\t\t}, err => {\r\n\t\t\t\treject(err);\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from './../environments/environment';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoursesService {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private http: HttpClient\r\n    ) { }\r\n\r\n  allocateHours(data) {\r\n    if (environment.production) return this.http.post(`/api/coursehours`, data);\r\n    return this.http.post(`${environment.apiUrl}/api/coursehours`, data);\r\n  }\r\n\r\n  getCourseData() {\r\n    return this.http.get(`${environment.apiUrl}/api/getcourses`,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n\r\n  assignApplicantRankings(name, body) {\r\n    /*\r\n    body = {\r\n\t\t\tcourse: \r\n\t\t\thours: \r\n    }\r\n    */\r\n    return this.http.post(`${environment.apiUrl}/api/applicant-rankings/${name}`, body,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n  \r\n  assignInstructoryRankings(course, body) {\r\n    /*\r\n    body = {\r\n\t\t\tname: \r\n\t\t\thours: \r\n    }\r\n    */\r\n    return this.http.post(`${environment.apiUrl}/api/instructor-rankings/${course}`, body,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n\r\n  getApplicantRankings(name){\r\n    return this.http.get(`${environment.apiUrl}/api/applicant-rankings/${name}`,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n\r\n  getInstructorRankings(course){\r\n    return this.http.get(`${environment.apiUrl}/api/instructor-rankings/${course}`,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n\r\n  addCourse(course) {\r\n    return this.http.post(`${environment.apiUrl}/api/course-data`, course,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n\r\n  requires(course) {\r\n    return this.http.post(`${environment.apiUrl}/api/getcourses`, course,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n}\r\n","\r\n<h1>Courses</h1>\r\n<div>\r\n  <app-export-course></app-export-course>\r\n</div>\r\n<div>\r\n  <app-adjust-coursehours></app-adjust-coursehours>\r\n</div>\r\n<div>\r\n  <h2>View a course</h2>\r\n<p class =\"bold\">Select a course:</p>\r\n\r\n<select id = \"dropdown\" (click)=\"showInformation()\">\r\n<option></option>\r\n<option *ngFor=\"let obj of courses\">{{obj.course}}</option>\r\n</select>\r\n</div>\r\n<div>\r\n    <table class = \"Searchresults\" *ngFor = \"let i of infoArray\"> \r\n      <tr> \r\n        <th>Name</th>\r\n        <th>Code</th>\r\n        <!--<th>Qualifications:</th> -->\r\n        <th>Requires TAs</th>\r\n        <th>TA Hours</th>\r\n        <th>Questions</th>\r\n        <th>Lecture Hours</th>\r\n        <th>Lab/Tut Hours</th>\r\n        <th>Sections</th>\r\n      </tr>\r\n      <tr> \r\n        <td>{{i.name}}</td>\r\n        <td>{{i.course}}</td>\r\n        <!--<td>{{i.qualifications}}</td> -->\r\n        <td>{{i.requires}}</td>\r\n        <td>{{i.hours}}</td>\r\n        <td>{{i.questions}}</td>\r\n        <td>{{i.lectureHours}}</td>\r\n        <td>{{i.labHours}}</td>\r\n        <td>{{i.sections}}</td>\r\n      </tr>\r\n    </table>\r\n</div>\r\n\r\n<div *ngIf=\"selectedCourse\">\r\n  <h2 style=\"margin-top: 25px;\">Edit Course: {{selectedCourse.course}}</h2>\r\n  <div>\r\n    <input type=\"checkbox\" [(ngModel)]=\"selectedCourse.requires\" (click)=\"changeCourse()\"><label>Requires TA positions</label>\r\n  </div>\r\n  <div>\r\n    <h3>Add a question</h3>\r\n    <input id=\"question-input\" placeholder=\"Enter a question\" size=\"50\">\r\n    <br><button (click)=\"submitQuestion()\">Submit</button><button (click)=\"cancel()\">Cancel</button>\r\n  </div>\r\n  </div>\r\n<style>\r\n  .Searchresults > tr {\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: lightgray;\r\n  }\r\n  .Searchresults > tr > th, .Searchresults > tr > td {\r\n    padding: 4px 8px 4px 8px;\r\n  }\r\n  div {\r\n    margin-top: 25px;\r\n  }\r\n</style>","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from '../require-tapositions/require-tapositions.component';\r\nimport { courses } from '../require-tapositions/needsTAs';\r\nimport { QuestionsService } from '../questions.service';\r\nimport { CoursesService } from '../courses.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-course-info-and-questions',\r\n  templateUrl: './course-info-and-questions.component.html',\r\n  styleUrls: ['./course-info-and-questions.component.css']\r\n})\r\nexport class CourseInfoAndQuestionsComponent implements OnInit {\r\n  courses = [];\r\n  infoArray = [];\r\n  selectedCourse = undefined;\r\n\r\n  constructor(\r\n    private _configservice:ConfigService,\r\n    private qService: QuestionsService,\r\n    private courseService: CoursesService\r\n    ) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._configservice.getquestions().subscribe((data) => this.courses = data);\r\n\r\n  }\r\n\r\n  showInformation(){\r\n\r\n\r\n    this.infoArray =[];\r\n    let dropdownChoice = (document.getElementById(\"dropdown\") as HTMLInputElement).value; \r\n\r\n    for (var key in this.courses) {\r\n      if (this.courses[key].course == dropdownChoice)  {\r\n        this.selectedCourse = this.courses[key];\r\n        this.infoArray.push(this.courses[key])\r\n      }\r\n    \r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  submitQuestion() {\r\n    // submit the questions\r\n\r\n    // also submit \"requires\"\r\n    setTimeout(() => this.submitCourseRequires(), 250);\r\n\r\n    let questioninput = (document.getElementById(\"question-input\") as HTMLInputElement).value;\r\n\r\n    if (questioninput === \"\") return;\r\n\r\n    let questions = [questioninput];\r\n    let obj = {\r\n      course: this.selectedCourse.course,\r\n      questions: questions\r\n    }\r\n    if (questioninput === \"\") return;\r\n\r\n    this.qService.createQuestions(obj).subscribe(() => {});\r\n  }\r\n\r\n  submitCourseRequires() {\r\n    let course = {\r\n      course: this.selectedCourse.course,\r\n      requires: this.selectedCourse.requires\r\n    }\r\n    if (course.requires === undefined) {\r\n      return setTimeout(() => window.location.reload(), 100);\r\n    }\r\n    this.courseService.requires(course).subscribe(() => {\r\n      setTimeout(() => window.location.reload(), 100);\r\n    });\r\n  }\r\n\r\n  changeCourse() {\r\n    if (this.selectedCourse.requires) this.selectedCourse.requires = false;\r\n    else this.selectedCourse.requires = true;\r\n  }\r\n\r\n  cancel() {\r\n    this.infoArray = [];\r\n    this.selectedCourse = undefined;\r\n    (document.getElementById(\"dropdown\") as HTMLInputElement).value = \"\"; \r\n    (document.getElementById(\"question-input\") as HTMLInputElement).value = \"\"; \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from './../environments/environment';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionsService {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private http: HttpClient) { }\r\n\r\n  createQuestions(data) {\r\n    return this.http.post(`${environment.apiUrl}/api/courses-ml`, data,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n\r\n  getQuestions(){\r\n    return this.http.get(`${environment.apiUrl}/api/getquestions`,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\r\n\r\nimport { ConfigService } from './require-tapositions/require-tapositions.component';\r\nimport { RequireTAPositionsComponent } from './require-tapositions/require-tapositions.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { QuestionsMlComponent } from './questions-ml/questions-ml.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HoursComponent } from './hours/hours.component';\r\nimport { InstructorComponentComponent } from './instructor-component/instructor-component.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CourseInfoAndQuestionsComponent } from './course-info-and-questions/course-info-and-questions.component';\r\nimport { ApplicantInformationComponent } from './applicant-information/applicant-information.component';\r\nimport { TAApplyAndRankComponent } from './ta-apply-and-rank/ta-apply-and-rank.component';\r\nimport { DepartmentTASelectionComponent } from './department-ta-selection/department-ta-selection.component';\r\nimport { UploadApplicantComponent } from './upload-applicant/upload-applicant.component';\r\nimport { UploadRankingsComponent } from './upload-rankings/upload-rankings.component';\r\nimport { LogInComponent } from './log-in/log-in.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AdjustTahoursComponent } from './adjust-tahours/adjust-tahours.component';\r\nimport { TAservice } from './adjust-tahours/adjust-tahours.component';\r\nimport { UserAdminComponent } from './user-admin/user-admin.component';\r\nimport { UploadEnrollmentComponent } from './upload-enrollment/upload-enrollment.component';\r\nimport { UploadCourseSetupComponent } from './upload-course-setup/upload-course-setup.component';\r\nimport { UploadUserComponent } from './upload-user/upload-user.component';\r\nimport { ExportCourseComponent } from './export-course/export-course.component';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { AdjustCoursehoursComponent } from './adjust-coursehours/adjust-coursehours.component';\r\nimport { courseService } from './adjust-coursehours/adjust-coursehours.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RequireTAPositionsComponent,\r\n    QuestionsMlComponent,\r\n    HoursComponent,\r\n    InstructorComponentComponent,\r\n    ApplicantInformationComponent,\r\n    TAApplyAndRankComponent,\r\n    DepartmentTASelectionComponent,\r\n    CourseInfoAndQuestionsComponent,\r\n    UploadApplicantComponent,\r\n    UploadRankingsComponent,\r\n    LogInComponent,\r\n    SignupComponent,\r\n    AdjustTahoursComponent,\r\n    UserAdminComponent,\r\n    UploadEnrollmentComponent,\r\n    UploadCourseSetupComponent,\r\n    UploadUserComponent,\r\n    ExportCourseComponent,\r\n    HomeComponent,\r\n    AdjustCoursehoursComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    NgxCsvParserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    ConfigService,\r\n    TAservice,\r\n    courseService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div style=\"text-align: center;\">\r\n    <h2>Log In</h2>\r\n    <br>E-mail:\r\n    <br><input id=\"login-username\" type=\"email\" name=\"email\" autocomplete=\"off\" required />\r\n    <br>Password:\r\n    <br><input id=\"login-password\" type=\"password\" name=\"password\" required (keyup.enter)=login() />\r\n    <br><button (click)=login()>Log In</button>\r\n    <p *ngIf=\"passwordError\" style=\"color: red;\">Incorrect username or password!</p>\r\n    <p *ngIf=\"message\" style=\"color: red;\">{{message}}</p>\r\n    <div style=\"margin-top: 25px;\">\r\n        <button *ngIf=\"!signup\" (click)=\"clickSignup()\">Sign Up</button>\r\n        <div *ngIf=\"signup\">\r\n            <app-signup></app-signup>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppComponent } from '../app.component';\r\n\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  message = undefined;\r\n  userError: boolean = false;\r\n  passwordError: boolean = false;\r\n  signup = false;\r\n\r\n  test = ['bruh', 'bruh2'];\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private appComponent: AppComponent\r\n  ) { }\r\n\r\n  login(): boolean {\r\n    let username = (document.getElementById(\"login-username\") as HTMLInputElement).value;\r\n    let password = (document.getElementById(\"login-password\") as HTMLInputElement).value;\r\n\r\n    if (username === \"\" || password === \"\") return;\r\n\r\n    this.userService.login(username, password).subscribe(\r\n      data => {\r\n        this.userService.setToken(data);\r\n        this.passwordError = false;\r\n        this.message = undefined;\r\n        setTimeout(() => window.location.reload(), 100);\r\n      },\r\n      err => {\r\n        if (err.error.message) this.message = err.error.message;\r\n        else if (err) this.passwordError = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  clickSignup() {\r\n    this.signup = !this.signup;\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class qualificationsService {\r\n\r\n  url = `${environment.apiUrl}`; // http://localhost:4200/qualifications\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  submitQualifications(data) {\r\n    return this.http.post(`${environment.apiUrl}/api/courses-insert-qualifications`, data);\r\n  }\r\n}","\r\n<div>\r\n    <table *ngIf = \"filteredapplicants.length != 0\"> \r\n      <tr> \r\n        <th>Name:</th>\r\n        <th></th>\r\n        <th>Email:</th>\r\n        <th></th>\r\n        <th>Course preference and questions:</th>\r\n        <th></th>\r\n        <th>Corresponding answers to questions:</th>\r\n  \r\n      </tr>\r\n      <tr *ngFor = \"let i of filteredapplicants\"> \r\n        <td>{{i.name}}</td>\r\n        <td></td>\r\n        <td>{{i.email}}</td>\r\n        <td></td>\r\n        <td>{{i.appliedCourses}}</td>\r\n        <td></td>\r\n        <td>{{i.answers}}</td>\r\n      </tr>\r\n    </table>\r\n</div>","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from '../require-tapositions/require-tapositions.component';\r\n\r\n@Component({\r\n  selector: 'app-applicant-information',\r\n  templateUrl: './applicant-information.component.html',\r\n  styleUrls: ['./applicant-information.component.css']\r\n})\r\nexport class ApplicantInformationComponent implements OnInit {\r\n\r\n  applicants = [];\r\n  filteredapplicants = [];\r\n  questions = [];\r\n\r\n\r\n  constructor(private _configservice:ConfigService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._configservice.getapplicants().subscribe((data) => this.applicants = data);\r\n    this._configservice.getquestions().subscribe((data) => this.questions = data);\r\n    setTimeout(() => this.display(), 250);\r\n  }\r\n\r\n  display(){\r\n    this.filteredapplicants = [];\r\n\r\n    for (var key in this.applicants) {\r\n      this.filteredapplicants.push(this.applicants[key])\r\n    }\r\n\r\n    for (var i in this.filteredapplicants) { \r\n      for(var j in this.filteredapplicants[i].appliedCourses) { \r\n\r\n       for (var k in this.questions) {\r\n\r\n        if (this.filteredapplicants[i].appliedCourses[j].toUpperCase() == this.questions[k].course) {\r\n\r\n        \r\n        //simply print the questions for that course\r\n        for (var l in this.questions[k].questions) {\r\n         this.filteredapplicants[i].appliedCourses[j] = (this.filteredapplicants[i].appliedCourses[j]+\"-\"+this.questions[k].questions[l])\r\n\r\n        }\r\n\r\n\r\n       }\r\n      }\r\n\r\n   }\r\n}\r\n\r\n  \r\n\r\n  \r\n\r\n}\r\n}\r\n\r\n\r\n ","<p>This is the instructor component</p>\r\n\r\n<!--\r\n<mat-table>\r\n    <ng-container  matColumnDef=\"policyNumber\">\r\n        <mat-header-cell *matHeaderCellDef>Policy Number</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let policy\"></mat-cell>\r\n    </ng-container>\r\n</mat-table>\r\n-->\r\n\r\n<!-- Table/list of courses that instructor teaches-->\r\n<!--<table>\r\n    <tr>\r\n        <td *ngFor=\"let header of courseTableHeaders\">\r\n            {{ header }}\r\n        </td>\r\n    </tr>\r\n    <ng-container *ngFor=\"let course of courseData\">\r\n        <tr *ngIf=\"course.instructor == instructor\" (click)=\"courseSelectedFromList\">\r\n            <td *ngFor=\"let property of Object.keys(course)\">\r\n                {{ course[property] }}\r\n            </td>\r\n        </tr>\r\n        <ng-container *ngIf=\"course\">\r\n\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n</table>-->\r\n\r\n<button (click)=\"buttonPressed()\">\r\n  Create course qualifications\r\n</button>\r\n\r\n<ng-container *ngIf=\"createQualificationsEnabled\">\r\n    <h2>Enter a description of the course qualifications below</h2>\r\n    <textarea id=\"courseQualificationsTextarea\"></textarea>\r\n    <button (click)=\"courseQualificationsSubmitted()\">Submit</button>\r\n    Course name <!-- todo impliment auto select with dropdown-->\r\n    <input type=\"text\" value=\"se123\" id=\"courseNameInput\">\r\n</ng-container>\r\n<p class = 'copy'>&copy; Blue Cheese 2021</p>\r\n\r\n<style type = 'text/css'>\r\nbody{\r\n    padding: 0;\r\n    margin: 0;\r\n    background: indigo;\r\n}\r\nbutton{\r\n    text-align: center;\r\n}\r\np{\r\n    text-align: center;\r\n    color: white;\r\n}\r\nng-container{\r\n    text-align: center;\r\n    color: white;\r\n}\r\n.copy{\r\n    text-align: center;\r\n    color: white;\r\n}\r\n</style>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { qualificationsService } from './qualifications.service';\r\n\r\n// angular material table stuff (test)\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-instructor-component',\r\n  templateUrl: './instructor-component.component.html',\r\n  styleUrls: ['./instructor-component.component.css']\r\n})\r\nexport class InstructorComponentComponent implements OnInit {\r\n\r\n  constructor(private qualificationsService: qualificationsService) { }\r\n\r\n  //table stuff\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createQualificationsEnabled = false;\r\n  selectedCourse;\r\n\r\n  buttonPressed(){\r\n    this.createQualificationsEnabled = true;\r\n  }\r\n\r\n  courseQualificationsSubmitted(){\r\n    let input = (document.getElementById(\"courseQualificationsTextarea\") as HTMLInputElement).value;\r\n    this.selectedCourse = (document.getElementById(\"courseNameInput\") as HTMLInputElement).value;\r\n    \r\n    let data = {\r\n      course: this.selectedCourse,\r\n      qualifications: input\r\n    }\r\n\r\n    if(this.selectedCourse == undefined || this.selectedCourse == null || this.selectedCourse == \"\"){\r\n      data.course = \"se123\";\r\n    }\r\n    \r\n    // send the qualifications to the db through the service\r\n    this.qualificationsService.submitQualifications(data).subscribe(data => {\r\n    });\r\n    alert(\"the following was submitted: \\n\" + input);\r\n  }\r\n}\r\n\r\n/* applciation from instructor view \r\n[this is a button]\r\n\r\nlist of courses they instruct\r\n  course a [select course]\r\n  course b [select course]\r\n  ...\r\n\r\n[select course] -> show course details i.e. qualifications and questions already defined (allow them to be edited?)\r\n                -> [setup TA application details]\r\n                -> [see applied applicants]?\r\n\r\n\r\n[setup TA application details] -> [add question]\r\n                               -> (select: answer type: multiple choice, string)\r\n                               -> [add multiple choice option]\r\n                               -> add qualifications description\r\n\r\n*/","import { Component, OnInit } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { courses } from './needsTAs';\r\nimport { questions } from '../course-info-and-questions/questions';\r\nimport { applicant } from '../applicant-information/applicants';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\nprivate linkstring: string = `${environment.apiUrl}/api/getcourses`;\r\nprivate linkstring1: string = `${environment.apiUrl}/api/getquestions`;\r\nprivate linkstring2: string = `${environment.apiUrl}/api/getapplicants`;\r\n\r\nconstructor(\r\n  private userService: UserService,\r\n  private http: HttpClient) { }\r\n\r\ngetcourses(): Observable<courses[]> {\r\nreturn this.http.get<courses[]>(this.linkstring,  { headers: this.userService.getAuthorizationHeader() });\r\n    }\r\n\r\ngetquestions(): Observable<questions[]> {\r\nreturn this.http.get<questions[]>(this.linkstring1,  { headers: this.userService.getAuthorizationHeader() });\r\n    }\r\ngetapplicants(): Observable<applicant[]> {\r\nreturn this.http.get<applicant[]>(this.linkstring2,  { headers: this.userService.getAuthorizationHeader() });\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-require-tapositions',\r\n  templateUrl: './require-tapositions.component.html',\r\n  styleUrls: ['./require-tapositions.component.css']\r\n})\r\n\r\nexport class RequireTAPositionsComponent implements OnInit {\r\n  \r\n  courses = [];\r\n  needsPositions = [];\r\n\r\n\r\n  constructor(private _configservice:ConfigService) {}\r\n\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this._configservice.getcourses().subscribe((data) => this.courses = data);\r\n\r\n  }\r\n\r\n  // minimize() {\r\n  //   this.needsPositions = [];\r\n  // }\r\n\r\n\r\n  loopthroughobject() {\r\n\r\n    for (var key in this.courses) {\r\n      this.needsPositions.push(this.courses[key].course)\r\n    \r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n  \r\n\r\n","<br>\r\n<br>\r\n<br>\r\n\r\n<h1>Courses that require TA positions</h1>\r\n\r\n<button class = \"ta\" id =\"ta\"  (click)= \"loopthroughobject()\">Click here to display courses that require TA positions</button>\r\n\r\n<div *ngFor=\"let need of needsPositions\">\r\n    \r\n    <p style=\"color: red;\">{{need}}</p> \r\n\r\n\r\n</div>\r\n<style type = 'text/css'>\r\nbody{\r\n    padding: 0;\r\n    margin: 0;\r\n    background: indigo;\r\n}\r\nh1{\r\n    padding: 0;\r\n    margin: 0;\r\n    color: white;\r\n    text-align: center;\r\n    background: indigo;\r\n}\r\nbutton{\r\n    text-align: center;\r\n}\r\ndiv{\r\n    text-align: center;\r\n    color: white;\r\n}\r\n.copy{\r\n    text-align: center;\r\n    color: white;\r\n}\r\n</style>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from '../require-tapositions/require-tapositions.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { courseinteface } from './coursehours'\r\nimport { environment } from '../../environments/environment';\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable()\r\nexport class courseService {\r\n\r\n\r\nprivate getcourseurl: string = `${environment.apiUrl}/api/getcoursehours`;\r\nprivate postcourseurl: string = `${environment.apiUrl}/api/replacecoursehours`;\r\n\r\nconstructor(\r\n  private userService: UserService,\r\n  private http: HttpClient) { }\r\n\r\npostHours(pdn) {\r\nreturn this.http.post(this.postcourseurl, pdn,  { headers: this.userService.getAuthorizationHeader() }).toPromise().then(data => {\r\n  console.log(data);\r\n});\r\n    }\r\n\r\ngetHours(): Observable<courseinteface[]> {\r\nreturn this.http.get<courseinteface[]>(this.getcourseurl, { headers: this.userService.getAuthorizationHeader() });\r\n    }\r\n\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-adjust-coursehours',\r\n  templateUrl: './adjust-coursehours.component.html',\r\n  styleUrls: ['./adjust-coursehours.component.css']\r\n})\r\nexport class AdjustCoursehoursComponent implements OnInit {\r\n\r\n  courses = [];\r\n  display = [];\r\n\r\n  constructor(private _courseservice:courseService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._courseservice.getHours().subscribe((data) => this.courses = data);\r\n  }\r\n\r\n  displayCourse(){ \r\n    this.display = [];\r\n    for (var key in this.courses) {\r\n      this.display.push(this.courses[key])\r\n    }\r\n  }\r\n\r\n  searchCourse(){ \r\n    let courseName = (document.getElementById(\"courseName\") as HTMLInputElement).value; \r\n    let newCoursehours = (document.getElementById(\"newCoursehours\") as HTMLInputElement).value;\r\n    let found = false; \r\n\r\n    //handle eventS where a box was not filled\r\n    if (!courseName) {\r\n      alert(\"Please input the name of the course\")\r\n     }\r\n\r\n    else if(!newCoursehours) {  \r\n      alert(\"Please input a number for the new course hours\")\r\n     }\r\n\r\n     //if everything is filled out \r\n     else  {\r\n      for (var key in this.courses) {\r\n       \r\n    \r\n        if (courseName.toLowerCase() == this.courses[key].course.toLowerCase()) {\r\n          //TA with that name and course was found\r\n\r\n          //now do post request that replaces the tas hours\r\n           this.courses[key].hours = newCoursehours;\r\n           found = true;\r\n\r\n           let postData = {\r\n            course : this.courses[key].course,\r\n            hours : this.courses[key].hours,\r\n           } \r\n           this._courseservice.postHours(postData);  }\r\n\r\n     }\r\n     //handle situation where the course or the TA is not found\r\n     if(found == false) {\r\n      alert(\"Sorry that course was not found\")\r\n     }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div *ngIf = \"courses.length != 0\">\r\n  <h2>Adjust Course Hours</h2>\r\n    <input type=\"text\" id=\"courseName\" placeholder =\"Course Name\"><br>\r\n    <label for=\"newCoursehours\">Please input the new time requirements for this course:</label><br>\r\n    <input type=\"text\" id=\"newCoursehours\" placeholder =\"New Course hours\"><br>\r\n    <button (click)= \"searchCourse()\">Replace hours</button>\r\n</div>\r\n\r\n<div *ngIf = \"courses.length != 0\">\r\n    <button (click)= \"displayCourse()\">Click here to display info for each course</button>\r\n</div>\r\n<div>\r\n    <table *ngIf = \"display.length != 0\"> \r\n      <tr> \r\n        <th>Course:</th>\r\n        <th></th>\r\n        <th>Hours:</th>\r\n        <th></th>\r\n        <th>Requires TA position:</th>\r\n      </tr>\r\n\r\n      <tr *ngFor = \"let i of display\"> \r\n        <td>{{i.course}}</td>\r\n        <td></td>\r\n        <td>{{i.hours}}</td>\r\n        <td></td>\r\n        <td>{{i.requires}}</td>\r\n      </tr>\r\n    </table>\r\n</div>","<div style=\"padding-top: 25px; text-align: center;\">\r\n    <h2>Sign Up</h2>\r\n    <br>E-mail:\r\n    <br><input id=\"signup-username\" type=\"email\" name=\"email\" autocomplete=\"off\" required />\r\n    <br>Password:\r\n    <br><input id=\"signup-password\" type=\"password\" name=\"password\" required />\r\n    <div *ngIf=\"error\">\r\n        <p style=\"color: red;\">Please enter a valid email!</p>\r\n    </div>\r\n    <div *ngIf=\"message\">\r\n        <p style=\"color: red;\">{{message}}</p>\r\n    </div>\r\n    <br><button (click)=signup()>Sign Up</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  error: boolean = false;\r\n  message = undefined;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  signup() {\r\n    let username = (document.getElementById(\"signup-username\") as HTMLInputElement).value;\r\n    let password = (document.getElementById(\"signup-password\") as HTMLInputElement).value;\r\n\r\n    if (username === \"\" || password === \"\") return;\r\n\r\n    this.userService.signup(username, password).subscribe(\r\n      data => {\r\n        this.message = undefined;\r\n        this.error = false;\r\n        setTimeout(() => window.location.reload(), 500)\r\n      },\r\n      err => {\r\n        if (err.error.message) {\r\n          this.message = err.error.message;\r\n        }\r\n        else {\r\n          this.error = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h1>Upload Rankings</h1>\r\n<input type=\"file\" #fileImportInput name=\"File Upload\" id=\"csvFileUpload\" (change)=\"fileListener($event)\"\r\n    accept=\".csv\" />\r\n<div *ngIf=\"csvError\" style=\"color: red;\">\r\n    <p>Wrong file format!</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\r\nimport { UploadApplicantService } from '../upload-applicant.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-rankings',\r\n  templateUrl: './upload-rankings.component.html',\r\n  styleUrls: ['./upload-rankings.component.css']\r\n})\r\nexport class UploadRankingsComponent implements OnInit {\r\n\r\n    data: any[];\r\n    csvError: boolean = false;\r\n\r\n    constructor(\r\n        private csvParser: NgxCsvParser,\r\n        private uploadService: UploadApplicantService\r\n        ) { }\r\n\r\n    @ViewChild('fileImportInput', { static: false }) fileImportInput: any;\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    fileListener($event: any): void {\r\n\r\n        this.csvError = false;\r\n\r\n        const files = $event.srcElement.files;\r\n        this.csvParser.parse(files[0], { header: false, delimiter: ',' }).pipe()\r\n            .subscribe((data: Array<any>) => {\r\n                this.data = data;\r\n            }, (err: NgxCSVParserError) => {\r\n                console.log(err);\r\n                this.csvError = true;\r\n            })\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { QuestionsService } from '../questions.service'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { InstructorComponentComponent } from '../instructor-component/instructor-component.component';\r\n\r\n@Component({\r\n  selector: 'app-questions-ml',\r\n  templateUrl: './questions-ml.component.html',\r\n  styleUrls: ['./questions-ml.component.css']\r\n})\r\nexport class QuestionsMlComponent implements OnInit {\r\n\r\n  constructor(private questions: QuestionsService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendQuestions() {\r\n\r\n    // get input values\r\n    let course = (document.getElementById(`course-name`) as HTMLInputElement).value;\r\n\r\n    let questions = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      let q = (document.getElementById(`question-${i + 1}`) as HTMLInputElement).value;\r\n      if (q === \"\") continue; // skip if input is empty\r\n      questions.push(q);\r\n    }\r\n\r\n    // exit if questions are empty\r\n    if (questions.length == 0 || course === \"\") return;\r\n\r\n    let data = {\r\n      course: course,\r\n      questions: questions\r\n    }\r\n\r\n    this.questions.createQuestions(data).subscribe(data => {\r\n    });\r\n\r\n    setTimeout(this.clear, 500);\r\n  }\r\n\r\n  clear() {\r\n    (document.getElementById(`course-name`) as HTMLInputElement).value = \"\";\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      (document.getElementById(`question-${i + 1}`) as HTMLInputElement).value = \"\";\r\n    }\r\n  }\r\n\r\n}\r\n","<app-instructor-component></app-instructor-component>\r\n<title>Create Questions</title>\r\n<h1>TA Questions</h1>\r\n<style type = 'text/css'>\r\n    body{\r\n        padding: 0;\r\n        margin: 0;\r\n        background: indigo;\r\n    }\r\n    h1{\r\n        padding: 0;\r\n        margin: 0;\r\n        text-align: center;\r\n        color: #fff;\r\n        background: indigo;\r\n    }\r\n    .input{\r\n    color: black;\r\n    text-align: center;\r\n    }\r\n    .buttons{\r\n        text-align: center;\r\n    }\r\n    p{\r\n        color: #fff;\r\n        text-align: center;\r\n    }\r\n</style>\r\n<div class = 'input'>\r\n    <label>Course: </label>\r\n    <input placeholder=\"Enter a course\" id=\"course-name\">\r\n    <div>\r\n        <input placeholder=\"Enter a question\" id=\"question-1\">\r\n    </div>\r\n    <div>\r\n        <input placeholder=\"Enter a question\" id=\"question-2\">\r\n    </div>\r\n    <div>\r\n        <input placeholder=\"Enter a question\" id=\"question-3\">\r\n    </div>\r\n    <div>\r\n        <input placeholder=\"Enter a question\" id=\"question-4\">\r\n    </div>\r\n    <div>\r\n        <input placeholder=\"Enter a question\" id=\"question-5\">\r\n    </div>\r\n</div>\r\n<div class = 'buttons'>\r\n    <button (click)=\"sendQuestions()\">Save</button>\r\n    <button (click)=\"clear()\">Cancel</button>\r\n</div>\r\n<p>&copy; Blue Cheese 2021</p>","import { NgModule } from '@angular/core';\r\nimport { CourseInfoAndQuestionsComponent } from './course-info-and-questions/course-info-and-questions.component'\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuestionsMlComponent } from './questions-ml/questions-ml.component';\r\nimport { RequireTAPositionsComponent } from './require-tapositions/require-tapositions.component';\r\nimport { HoursComponent } from './hours/hours.component';\r\nimport { ApplicantInformationComponent } from './applicant-information/applicant-information.component';\r\nimport { TAApplyAndRankComponent } from './ta-apply-and-rank/ta-apply-and-rank.component';\r\nimport { DepartmentTASelectionComponent } from './department-ta-selection/department-ta-selection.component';\r\nimport { UploadApplicantComponent } from './upload-applicant/upload-applicant.component';\r\nimport { AdjustTahoursComponent } from './adjust-tahours/adjust-tahours.component';\r\nimport { UserAdminComponent } from  './user-admin/user-admin.component';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { AdjustCoursehoursComponent } from './adjust-coursehours/adjust-coursehours.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent},\r\n  { path: 'upload', component: UploadApplicantComponent },\r\n  { path: 'view-courses', component: CourseInfoAndQuestionsComponent},\r\n  { path: 'view-tas', component: AdjustTahoursComponent},\r\n  { path: 'view-applicants', component: DepartmentTASelectionComponent },\r\n  { path: 'users', component: UserAdminComponent }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<h1>Upload Course Setup</h1>\r\n<input type=\"file\" #fileImportInput name=\"File Upload\" id=\"csvFileUpload3\" (change)=\"fileListener($event)\"\r\n    accept=\".csv\" />\r\n<div *ngIf=\"csvError\" style=\"color: red;\">\r\n    <p>Wrong file format!</p>\r\n</div>\r\n<div *ngIf=\"data\">\r\n    <h2>Preview:</h2>\r\n    <p *ngFor=\"let row of data.slice(1)\">\r\n        <span *ngFor=\"let d of row.slice(0)\">{{d}} </span>\r\n    </p>\r\n    <button (click)=\"saveData()\">Submit</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\r\nimport { CoursesService } from '../courses.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-course-setup',\r\n  templateUrl: './upload-course-setup.component.html',\r\n  styleUrls: ['./upload-course-setup.component.css']\r\n})\r\nexport class UploadCourseSetupComponent implements OnInit {\r\n\r\n  data: any[];\r\n  csvError: boolean = false;\r\n\r\n  constructor(\r\n    private csvParser: NgxCsvParser,\r\n    private courseService: CoursesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  fileListener($event: any): void {\r\n\r\n    this.csvError = false;\r\n\r\n    const files = $event.srcElement.files;\r\n    this.csvParser.parse(files[0], { header: false, delimiter: ',' }).pipe()\r\n      .subscribe((data: Array<any>) => {\r\n        this.data = data;\r\n      }, (err: NgxCSVParserError) => {\r\n        console.log(err);\r\n        this.csvError = true;\r\n      })\r\n  }\r\n\r\n  saveData() {\r\n\r\n    // parse each row of data\r\n    let formatted = []\r\n    for (let row of this.data.slice(1)) {\r\n      if (row[0] === \"\") continue;\r\n\r\n      try {\r\n        let obj = {\r\n          course: row[0],\r\n          name: row[1],\r\n          lectureHours: parseInt(row[2]),\r\n          labHours: parseInt(row[3]),\r\n          sections: parseInt(row[4])\r\n        }\r\n        if (!row[3]) obj.labHours = 0;\r\n        formatted.push(obj);\r\n      } catch (err) {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // send to API sequentially\r\n    for (let i = 0; i < formatted.length; i++) {\r\n      let obj = formatted[i];\r\n      setTimeout(() => this.courseService.addCourse(obj).subscribe(), i * 100);\r\n    }\r\n\r\n    // clear form after user submits\r\n    this.data = undefined;\r\n    (document.getElementById(\"csvFileUpload3\") as HTMLInputElement).value = \"\";\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CoursesService } from '../courses.service';\r\nimport { ExportToCsv } from 'export-to-csv';\r\n\r\n@Component({\r\n  selector: 'app-export-course',\r\n  templateUrl: './export-course.component.html',\r\n  styleUrls: ['./export-course.component.css']\r\n})\r\nexport class ExportCourseComponent implements OnInit {\r\n\r\n  courses = undefined;\r\n  sortedData = undefined;\r\n  options = {\r\n    fieldSeparator: ',',\r\n    showLabels: true,\r\n    filename: \"course-data\",\r\n    useKeysAsHeaders: true\r\n  }\r\n  csvExporter = new ExportToCsv(this.options);\r\n\r\n  constructor(\r\n    private courseService: CoursesService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCourses();\r\n  }\r\n\r\n  getCourses() {\r\n    this.courseService.getCourseData().subscribe(data => {\r\n      this.courses = data;\r\n\r\n      // sort data \r\n      this.sortedData = []\r\n      for (let c of this.courses) {\r\n        let newCourse = {\r\n          name: c.name,\r\n          course: c.course,\r\n          questions: c.questions\r\n        }\r\n        this.sortedData.push(newCourse);\r\n      }\r\n    })\r\n  }\r\n\r\n  export() {\r\n    this.csvExporter.generateCsv(this.sortedData);\r\n  }\r\n}\r\n","<h2>Export course data</h2>\r\n<button (click)=\"export()\">Download</button>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\turl = environment.apiUrl;\r\n\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n\t};\r\n\r\n\tlogin(username: string, password: string) {\r\n\r\n\t\tlet body = {\r\n\t\t\temail: username,\r\n\t\t\tpassword: password\r\n\t\t}\r\n\r\n\t\treturn this.http.post(`${this.url}/api/login`, body);\r\n\t}\r\n\r\n\tsignup(email, password) {\r\n\t\tlet body = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password\r\n\t\t}\r\n\t\treturn this.http.post(`${this.url}/api/signup`, body);\r\n\t}\r\n\r\n\tgetEmail() {\r\n\t\treturn this.http.get(`${this.url}/api/login`, { headers: this.getAuthorizationHeader() });\r\n\t}\r\n\r\n\tgetAuthorizationHeader() {\r\n\t\tlet token = localStorage.getItem('token');\r\n\r\n\t\tif (!token) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.set('Authorization', 'Bearer ' + token);\r\n\t\treturn headers;\r\n\t}\r\n\r\n\tsetToken(token) {\r\n\t\tlocalStorage.setItem('token', token.accessToken);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tlocalStorage.removeItem('token');\r\n\t}\r\n\r\n\tgetUsers() {\r\n\t\treturn this.http.get(`${this.url}/api/users`, {headers: this.getAuthorizationHeader()});\r\n\t}\r\n\r\n\taddInstructorCourse(instructor) {\r\n\t\treturn this.http.post(`${this.url}/api/instructors`, instructor, {headers: this.getAuthorizationHeader()});\r\n\t}\r\n\r\n\taddInstructor(instructor) {\r\n\t\treturn this.http.post(`${this.url}/api/add-instructor`, instructor, {headers: this.getAuthorizationHeader()});\r\n\t}\r\n\r\n\tgetInstructors() {\r\n\t\treturn this.http.get(`${this.url}/api/instructors`, {headers: this.getAuthorizationHeader()});\r\n\t}\r\n\r\n\tverifyUser(email) {\r\n\t\tlet body = {\r\n\t\t\temail: email,\r\n\t\t\tverified: true\r\n\t\t}\r\n\t\treturn this.http.post(`${this.url}/api/users`, body, {headers: this.getAuthorizationHeader()});\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from './../environments/environment';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadApplicantService {\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private http: HttpClient) { }\r\n\r\n  addApplicant(data) {\r\n    return this.http.post(`${environment.apiUrl}/api/add-applicants`, data,  { headers: this.userService.getAuthorizationHeader() });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}